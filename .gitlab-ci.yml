stages:
  - build

build:
  image: node:latest    
  stage: build
  variables: 
    # Replace this with your site URL
    PUBLIC_URL: https://steven.meyer@students.ffhs.ch.gitlab.io/SSE_Frontend/  
  script:
    - yarn install      
    - yarn build
  artifacts:
    paths:
      - build/ 
  

January 17, 2021
â€¢ 3 min read
Continuously deploy a React App to GitLab Pages

If you're looking for a simple way to deploy a CRA app everytime you push new changes, Gitlab Pages can be a great way to do this.

By the end of this article you'll learn how to:

    setup a GitLab CI pipeline to build the app on every new commit
    deploy the app to GitLab Pages on every commit to master, automatically

This walkthrough assumes you're using Gitlab to host your repository.
Step 1: Setup the CI pipeline to build the project

What we want is to run yarn build after every commit and to save the contents of the build folder as a GitLab artifact that we can later use.

If you haven't already, create a .gitlab-ci.yml file in the root of your project:

stages:
  - build
  - deploy

build:
  image: node:latest    
  stage: build
  variables: 
    # Replace this with your site URL
    PUBLIC_URL: https://steven.meyer@students.ffhs.ch.gitlab.io/SSE_Frontend/  
  script:
    - yarn install      
    - yarn build
  artifacts:
    paths:
      - build/

# Stages run sequentially, so we add a new `deploy` stage 
# after the `build` one
  
pages:
  image: alpine:latest
  stage: deploy
  variables:
    GIT_STRATEGY: none        # Do not clone git repo
  script:
    # Rename the CRA `build` folder to `public`
    - mv build public         
  artifacts:
    paths:
      - public
